#!/bin/bash

# PEAKMODE IP Configuration Script
# This script detects your local network IP and configures the application
# to be accessible from other devices on your network

# ANSI color codes
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[0;33m'
BLUE='\033[0;34m'
CYAN='\033[0;36m'
PURPLE='\033[0;35m'
BOLD='\033[1m'
RESET='\033[0m'

echo -e "${BOLD}${BLUE}======================================${RESET}"
echo -e "${BOLD}${BLUE}  PEAKMODE Network Configuration     ${RESET}"
echo -e "${BOLD}${BLUE}======================================${RESET}"
echo ""

echo -e "${BOLD}Detecting your local network IP address...${RESET}"

# Get local IP address (works on both macOS and Linux)
if [[ "$OSTYPE" == "darwin"* ]]; then
  # macOS command
  LOCAL_IP=$(ifconfig | grep "inet " | grep -v 127.0.0.1 | awk '{print $2}' | head -n 1)
else
  # Linux command
  LOCAL_IP=$(hostname -I | awk '{print $1}')
fi

if [ -z "$LOCAL_IP" ]; then
  echo -e "${RED}❌ ERROR: Could not detect your local IP address.${RESET}"
  echo -e "${YELLOW}Please make sure you're connected to a network and try again.${RESET}"
  exit 1
fi

echo -e "${GREEN}✓ Detected local IP address: ${LOCAL_IP}${RESET}"

# Create or update .env.local file for environment variables
echo -e "${BOLD}Configuring environment variables...${RESET}"

# Create .env.local file
cat > .env.local << EOF
# Auto-generated by add-IP.sh
# Created: $(date)
EXPO_PUBLIC_API_HOST=$LOCAL_IP
API_URL=http://$LOCAL_IP:5003/api
EOF

# Also create a frontend-specific .env file
mkdir -p frontend
cat > frontend/.env << EOF
# Auto-generated by add-IP.sh
# Created: $(date)
EXPO_PUBLIC_API_HOST=$LOCAL_IP
API_URL=http://$LOCAL_IP:5003/api
EOF

# Also update app.config.js if it exists
if [ -f "frontend/app.config.js" ]; then
  echo -e "${BOLD}Backing up app.config.js...${RESET}"
  cp frontend/app.config.js frontend/app.config.js.bak
  
  # We'll use sed to update the file, but the syntax is different between macOS and Linux
  if [[ "$OSTYPE" == "darwin"* ]]; then
    # macOS version of sed
    sed -i '' "s|http://localhost:5003/api|http://$LOCAL_IP:5003/api|g" frontend/app.config.js
  else
    # Linux version of sed
    sed -i "s|http://localhost:5003/api|http://$LOCAL_IP:5003/api|g" frontend/app.config.js
  fi
  echo -e "${GREEN}✓ Updated frontend/app.config.js${RESET}"
fi

echo -e "${GREEN}✓ Environment variables set successfully!${RESET}"
echo ""

# Network Access Information section
echo -e "${BOLD}${BLUE}Network Access Information${RESET}"
echo -e "${BLUE}=============================${RESET}"
echo -e "Your app will be accessible at:"
echo -e "- Backend API: ${BOLD}http://${LOCAL_IP}:5003/api${RESET}"
echo -e "- Frontend: ${BOLD}Scan the QR code from Expo${RESET}"
echo ""

# Verify configuration files
echo -e "${BOLD}${BLUE}Verifying Configuration${RESET}"
echo -e "${BLUE}=======================${RESET}"

# Check .env.local in root directory
echo -e "${BOLD}Checking configuration files...${RESET}"
if [ -f ".env.local" ]; then
  ENV_ROOT_CONTENT=$(grep "API_URL=http://$LOCAL_IP:5003/api" .env.local)
  if [ -n "$ENV_ROOT_CONTENT" ]; then
    echo -e "${GREEN}✓ Root .env.local file is correctly configured${RESET}"
  else
    echo -e "${YELLOW}⚠️ Root .env.local file exists but may not have the correct IP${RESET}"
  fi
else
  echo -e "${RED}❌ Root .env.local file was not created${RESET}"
fi

# Check frontend/.env
if [ -f "frontend/.env" ]; then
  ENV_FRONTEND_CONTENT=$(grep "API_URL=http://$LOCAL_IP:5003/api" frontend/.env)
  if [ -n "$ENV_FRONTEND_CONTENT" ]; then
    echo -e "${GREEN}✓ Frontend .env file is correctly configured${RESET}"
  else
    echo -e "${YELLOW}⚠️ Frontend .env file exists but may not have the correct IP${RESET}"
  fi
else
  echo -e "${RED}❌ Frontend .env file was not created${RESET}"
fi

# Check app.config.js
if [ -f "frontend/app.config.js" ]; then
  CONFIG_CONTENT=$(grep "$LOCAL_IP:5003/api" frontend/app.config.js)
  if [ -n "$CONFIG_CONTENT" ]; then
    echo -e "${GREEN}✓ app.config.js contains the correct IP address${RESET}"
  else
    echo -e "${YELLOW}⚠️ app.config.js may not be configured with your IP address${RESET}"
  fi
else
  echo -e "${YELLOW}⚠️ app.config.js file not found${RESET}"
fi

# Overall verification status
if [ -f ".env.local" ] && [ -f "frontend/.env" ]; then
  echo ""
  echo -e "${GREEN}${BOLD}✓ Verification complete: Your app is ready for remote connections!${RESET}"
else
  echo ""
  echo -e "${RED}${BOLD}⚠️ Verification found issues: Some configuration files are missing!${RESET}"
fi

echo ""
echo -e "${BOLD}${GREEN}✓ Network configuration complete!${RESET}"
echo ""
echo -e "${BOLD}${YELLOW}What's next:${RESET}"
echo -e "1. Install dependencies:  ${BOLD}./install.sh${RESET}"
echo -e "2. Start the backend:     ${BOLD}./run-backend.sh${RESET}"
echo -e "3. Start the frontend:    ${BOLD}./run-frontend.sh${RESET}"
echo -e "4. View database:         ${BOLD}./print-db.sh${RESET}"
echo "" 