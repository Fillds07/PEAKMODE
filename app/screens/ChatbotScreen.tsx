import React, { useState, useRef } from 'react';
import { 
  StyleSheet, 
  View, 
  Text, 
  FlatList, 
  TextInput, 
  TouchableOpacity, 
  KeyboardAvoidingView, 
  Platform,
  ActivityIndicator
} from 'react-native';
import { Icon } from '@rneui/themed';

// Sample responses - in a real app, these would be generated by an AI
const SAMPLE_RESPONSES = {
  'vitamin d': 'Vitamin D is crucial for bone health and immune function. The recommended daily intake is 600-800 IU for most adults, but many health experts suggest higher amounts, especially for those with limited sun exposure.',
  'supplements': 'Supplements can be a valuable addition to your diet, but they should not replace a balanced diet. Always consult with a healthcare provider before starting any new supplement.',
  'workout': 'Regular exercise is essential for overall health. Aim for at least 150 minutes of moderate-intensity exercise or 75 minutes of vigorous exercise per week, plus strength training twice a week.',
  'fasting': 'Intermittent fasting can have various health benefits, including weight management and improved metabolic health. Common methods include 16/8 (16 hours fasting, 8 hours eating) and 5:2 (5 days normal eating, 2 days restricted calories).',
  'nutrition': 'A balanced diet should include plenty of fruits, vegetables, lean proteins, healthy fats, and whole grains. Try to limit processed foods, added sugars, and excessive salt.',
  'hello': 'Hello! I\'m your PEAKMODE assistant. How can I help you with supplements, nutrition, fasting, or workout information today?',
  'hi': 'Hi there! I\'m your PEAKMODE assistant. How can I help you with supplements, nutrition, fasting, or workout information today?',
  'default': 'I\'m here to help with questions about supplements, nutrition, fasting, and workouts. Could you please clarify your question?'
};

const ChatbotScreen = () => {
  const [messages, setMessages] = useState([
    {
      id: '1',
      text: 'Hi there! I\'m your PEAKMODE assistant. I can help you learn about supplements, nutrition, fasting/dieting, and workouts. What would you like to know more about?',
      sender: 'bot',
      timestamp: new Date().toISOString(),
    },
  ]);
  const [inputText, setInputText] = useState('');
  const [isLoading, setIsLoading] = useState(false);
  
  const flatListRef = useRef(null);

  const handleSend = () => {
    if (inputText.trim() === '') return;
    
    // Add user message
    const userMessage = {
      id: Date.now().toString(),
      text: inputText,
      sender: 'user',
      timestamp: new Date().toISOString(),
    };
    
    setMessages(prevMessages => [...prevMessages, userMessage]);
    setInputText('');
    setIsLoading(true);
    
    // Simulate AI response delay
    setTimeout(() => {
      // Generate response based on input
      let responseText = SAMPLE_RESPONSES.default;
      const input = inputText.toLowerCase();
      
      Object.keys(SAMPLE_RESPONSES).forEach(key => {
        if (input.includes(key)) {
          responseText = SAMPLE_RESPONSES[key];
        }
      });
      
      // Add bot response
      const botMessage = {
        id: (Date.now() + 1).toString(),
        text: responseText,
        sender: 'bot',
        timestamp: new Date().toISOString(),
      };
      
      setMessages(prevMessages => [...prevMessages, botMessage]);
      setIsLoading(false);
    }, 1000);
  };

  const renderMessage = ({ item }) => {
    const isUser = item.sender === 'user';
    
    return (
      <View style={[
        styles.messageContainer,
        isUser ? styles.userMessageContainer : styles.botMessageContainer
      ]}>
        {!isUser && (
          <View style={styles.avatarContainer}>
            <Icon name="robot" type="material-community" size={24} color="#DAA520" />
          </View>
        )}
        <View style={[
          styles.messageBubble,
          isUser ? styles.userMessageBubble : styles.botMessageBubble
        ]}>
          <Text style={styles.messageText}>{item.text}</Text>
        </View>
      </View>
    );
  };

  return (
    <KeyboardAvoidingView 
      style={styles.container}
      behavior={Platform.OS === 'ios' ? 'padding' : 'height'}
      keyboardVerticalOffset={100}
    >
      <Text style={styles.title}>AI Assistant</Text>
      
      <FlatList
        ref={flatListRef}
        data={messages}
        renderItem={renderMessage}
        keyExtractor={item => item.id}
        contentContainerStyle={styles.messagesList}
        onContentSizeChange={() => flatListRef.current?.scrollToEnd()}
      />
      
      <View style={styles.inputContainer}>
        <TextInput
          style={styles.input}
          value={inputText}
          onChangeText={setInputText}
          placeholder="Ask about supplements, nutrition, fasting, or workouts..."
          placeholderTextColor="#999"
          multiline
        />
        {isLoading ? (
          <ActivityIndicator size="small" color="#DAA520" style={styles.sendButton} />
        ) : (
          <TouchableOpacity style={styles.sendButton} onPress={handleSend}>
            <Icon name="send" type="material" size={24} color="#DAA520" />
          </TouchableOpacity>
        )}
      </View>
    </KeyboardAvoidingView>
  );
};

const styles = StyleSheet.create({
  container: {
    flex: 1,
    backgroundColor: '#fff',
  },
  title: {
    fontSize: 20,
    fontWeight: 'bold',
    color: '#333',
    textAlign: 'center',
    padding: 15,
    borderBottomWidth: 1,
    borderBottomColor: '#eee',
  },
  messagesList: {
    padding: 16,
    paddingBottom: 20,
  },
  messageContainer: {
    flexDirection: 'row',
    marginBottom: 16,
    alignItems: 'flex-end',
  },
  userMessageContainer: {
    justifyContent: 'flex-end',
  },
  botMessageContainer: {
    justifyContent: 'flex-start',
  },
  avatarContainer: {
    width: 36,
    height: 36,
    borderRadius: 18,
    backgroundColor: '#FFF9E5',
    justifyContent: 'center',
    alignItems: 'center',
    marginRight: 8,
  },
  messageBubble: {
    padding: 12,
    borderRadius: 20,
    maxWidth: '75%',
  },
  userMessageBubble: {
    backgroundColor: '#DAA520',
    borderBottomRightRadius: 4,
  },
  botMessageBubble: {
    backgroundColor: '#f0f0f0',
    borderBottomLeftRadius: 4,
  },
  messageText: {
    fontSize: 16,
    color: '#333',
  },
  inputContainer: {
    flexDirection: 'row',
    padding: 8,
    borderTopWidth: 1,
    borderTopColor: '#eee',
    alignItems: 'center',
    backgroundColor: '#fff',
  },
  input: {
    flex: 1,
    backgroundColor: '#f5f5f5',
    padding: 12,
    borderRadius: 20,
    fontSize: 16,
    maxHeight: 120,
  },
  sendButton: {
    width: 44,
    height: 44,
    justifyContent: 'center',
    alignItems: 'center',
  },
});

export default ChatbotScreen; 